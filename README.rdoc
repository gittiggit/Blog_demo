== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
======================================================
======================================================
*** To reload the console
=> reload!
=> article = Article.create()
=> article.errors.any?
=> article.errors.full_messages
+++++++++++++++++++++++++++++++++++++
**To deal with model back form(the form that have a model) rails provides form_for method. 

#render plain: params[:article].inspect


+++++++++++++++++++++++++++++++++++++++++++++++++++
** Perform the Article crud 
+++++++++++++++++++++++++++++++++++++++++++++++++++
01. first in the gemfile, include the following lines
gem 'bootstrap-sass', '~> 3.3.6'
gem 'sass-rails', '>= 3.2'
02. then run bundle install
03. Create a assets/stylessheets/custom.css.scss
04. Add the following line at the top of this file
@import "bootstrap-sprockets";
@import "bootstrap";
05. In the assets/javascripts/application.js
include the following line 
//= require bootstrap-sprockets
like as follows:
//= require jquery
//= require jquery_ujs
//= require bootstrap-sprockets
//= require turbolinks
//= require_tree .

++++++++++++++++++++++++++++++++++++++++++++++++
** Add the _navigation.html.erb
** Design the home page
** Add the _footer.html.erb
** Add the design for the footer in the custom css and follow the drive docs

=================================================================
** Now style the form:
** Style the errors partial
** Style the messages partial
** Style the show page of the article
** Style the index page
================================================================
Step 13: Create user
rails g model create User username:string email:string
user = User.find(2)

====================================================================

Step 14: Validates for user model:
 -user name must be present
 -email must be present and unique
 -validate email format using regex
===================================================================


